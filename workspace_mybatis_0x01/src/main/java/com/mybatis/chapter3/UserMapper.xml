<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.chapter3.UserMapper">
    <select id="selectByUser" parameterType="com.mybatis.chapter3.SysUser" resultType="com.mybatis.chapter3.SysUser">
        select id,
        user_name userName,
        user_password userPassword,
        user_email userMail,
        user_info userInfo,
        head_img headImg,
        create_time createTime
        from sys_user
        <!--由于两个条件都是动态的，所以如果没有1+1这个默认条件，当两个id判断都不满足时，最后生成的sql会以where结束-->
        where 1=1
        <!--if标签有一个必填的属性test，test 的属性值是一个符合OGNL要求的判断表达式，表达式的结果可以是true/false-->
        <if test="userName != null and userName !=''">
            and user_name like concat('%',#{userName},'%')
        </if>
        <if test="userEmail != null and userEmail !=''">
            and user_email = #{userEmail}
        </if>
    </select>

    <select id="selectByUserWithTagWhere" resultType="com.mybatis.chapter3.SysUser">
        select id,
        user_name userName,
        user_password userPassword,
        user_email userMail,
        user_info userInfo,
        head_img headImg,
        create_time createTime
        from sys_user
        <!--where标签的作用:如果该标签包含的元素中有返回值,就插入一个where；如果where后面的
        字符串是以AND和OR开头的，就将他们剔除-->
        <where>
            <if test="userName != null and userName!=''">
                and user_name like concat('%',#{userName},'%')
            </if>
            <if test="userEmail != null and userEmail !=''">
                and user_email = #{userEmail}
            </if>
        </where>
    </select>

    <select id="selectByUserWithTagChoose" resultType="com.mybatis.chapter3.SysUser">
    select id,
    user_name userName,
    user_password userPassword,
    user_email userEmail,
    user_info userInfo,
    head_img headImg,
    create_time createTime
    from sys_user
    <!--由于两个条件都是动态的，所以如果没有1+1这个默认条件，当两个id判断都不满足时，最后生成的sql会以where结束-->
    where 1=1
    <!--1个choose中至少有1个when，有0个/1个otherwise-->
    <choose>
    <when test="id!=null">
    and id = #{id}
    </when>
    <when test="userName != null and userName!=''">
    and user_name =#{userName}
    </when>
    <otherwise>
    and 1=2
    </otherwise>
    </choose>
    </select>

    <update id="updateByIdSelective">
        update sys_user
        set
        <if test="userName!=null and userName!=''">
            user_name=#{userName},
        </if>
        <if test="userPassword!=null and userPassword!=''">
            user_password=#{userPassword},
        </if>
        <if test="userEmail!=null and userEmail!=''">
            user_email=#{userEmail},
        </if>
        <if test="userInfo!=null and userInfo!=''">
            user_info=#{userInfo},
        </if>
        <if test="headImg!=null and headImg!=''">
            head_img=#{headImg},
        </if>
        <if test="create_time!=null and create_time!=''">
            create_time=#{create_time,jdbcType=TIMESTAMP},
        </if>

        id=#{id}
        where id=#{id}

    </update>

    <update id="updateByIdSelectiveWithTagSet">
        update sys_user
        <!--set标签的作用:如果该标签包含的元素中有返回值，就插入一个set；如果set后面的字符串是以逗号结尾的，
        就将这个逗号剔除-->
        <set>
            <if test="userName!=null and userName!=''">
                user_name=#{userName},
            </if>
            <if test="userPassword!=null and userPassword!=''">
                user_password=#{userPassword},
            </if>
            <if test="userEmail!=null and userEmail!=''">
                user_email=#{userEmail},
            </if>
            <if test="userInfo!=null and userInfo!=''">
                user_info=#{userInfo},
            </if>
            <if test="headImg!=null and headImg!=''">
                head_img=#{headImg},
            </if>
            <if test="create_time!=null and create_time!=''">
                create_time=#{create_time,jdbcType=TIMESTAMP},
            </if>
            id=#{id}
        </set>
        where id=#{id}

    </update>

    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        <!--使用insert中需要注意，若在列的部分增加if条件，则values的部分也需要增加相同的if条件，
        必须保证上下可以互相对应，完全匹配-->
        insert into sys_user(
        user_name,user_password,
        <if test="userEmail != null and userEmail != ''">
            user_email,
        </if>
        user_info,head_img,create_time)
        values (
        #{userName},#{userPassword},
        <if test="userEmail != null and userEmail != ''">
                #{userEmail},
        </if>
        #{userInfo},#{headImg,jdbcType=BLOB},
        #{create_time,jdbcType=TIMESTAMP}
        )
    </insert>

    <!--自动映射-->
    <select id="selectUserAndRoleById" resultType="com.mybatis.chapter3.SysUser">
        select u.id,
        u.user_name userName,
        u.user_password userPassword,
        u.user_email userEmail,
        u.user_info userInfo,
        u.head_img headImg,
        u.create_time create_time,
        <!--内部类的写法-->
        r.id "role.id",
        r.role_name "role.roleName",
        r.enabled "role.enabled",
        r.create_time "role.create_time",
        r.create_by "role.create_by"
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        where u.id = #{id}
    </select>

    <select id="selectUserAndRoleById2" resultMap="userRoleMap">
        select u.id,
        u.user_name,
        u.user_password,
        u.user_email,
        u.user_info,
        u.head_img,
        u.create_time,
        <!--内部类的写法-->
        r.id role_id,
        r.role_name role_Name,
        r.enabled role_enabled,
        r.create_time role_create_time,
        r.create_by role_create_by
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        where u.id = #{id}
    </select>

    <!--<resultMap id="userRoleMap" type="com.mybatis.chapter3.SysUser">-->
        <!--<id property="id" column="id"/>-->
        <!--<result property="userName" column = "user_name"/>-->
        <!--<result property="userPassword" column = "user_password"/>-->
        <!--<result property="userEmail" column = "user_email"/>-->
        <!--<result property="userInfo" column = "user_info"/>-->
        <!--<result property="headImg" column = "head_img" jdbcType="BLOB"/>-->
        <!--<result property="create_time" column = "create_time" jdbcType="TIMESTAMP"/>-->
        <!--&lt;!&ndash;相关属性&ndash;&gt;-->
        <!--<result property="role.id" column = "role_id"/>-->
        <!--<result property="role.role_Name" column = "role_Name"/>-->
        <!--<result property="role.enabled" column = "role_enabled"/>-->
        <!--<result property="role.create_by" column = "role_create_by"/>-->
        <!--<result property="role.create_time" column = "role_create_time" jdbcType="TIMESTAMP"/>-->

    <!--</resultMap>-->

    <resultMap id="userMap" type="com.mybatis.chapter3.SysUser">
        <id property="userName" column="user_name"/>
        <result property="userName" column = "user_name"/>
        <result property="userPassword" column = "user_password"/>
        <result property="userEmail" column = "user_email"/>
        <result property="userInfo" column = "user_info"/>
        <result property="headImg" column = "head_img" jdbcType="BLOB"/>
        <result property="create_time" column = "create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--<resultMap id="userRoleMap" extends="userMap" type="com.mybatis.chapter3.SysUser">-->
        <!--<result property="role.id" column = "role_id"/>-->
        <!--<result property="role.role_Name" column = "role_Name"/>-->
        <!--<result property="role.enabled" column = "role_enabled"/>-->
        <!--<result property="role.create_by" column = "role_create_by"/>-->
        <!--<result property="role.create_time" column = "role_create_time" jdbcType="TIMESTAMP"/>-->
    <!--</resultMap>-->

    <resultMap id="userRoleMap" extends="userMap" type="com.mybatis.chapter3.SysUser">
        <!--使用association标签-->
        <association property="role" columnPrefix="role_"
                     javaType="com.mybatis.chapter3.SysRole">
            <result property="id" column = "id"/>
            <result property="role_Name" column = "Name"/>
            <result property="enabled" column = "enabled"/>
            <result property="create_by" column = "create_by"/>
            <result property="create_time" column = "create_time" jdbcType="TIMESTAMP"/>
        </association>


    </resultMap>

</mapper>